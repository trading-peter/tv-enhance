export const toolList = [
  { action: '3divers_pattern', label: '3divers_pattern' },
  { action: 'abcd_pattern', label: 'abcd_pattern' },
  { action: 'anchored_text', label: 'anchored_text' },
  { action: 'arc', label: 'arc' },
  { action: 'arrow_down', label: 'arrow_down' },
  { action: 'arrow_left', label: 'arrow_left' },
  { action: 'arrow_right', label: 'arrow_right' },
  { action: 'arrow_up', label: 'arrow_up' },
  { action: 'arrow', label: 'arrow' },
  { action: 'balloon', label: 'balloon' },
  { action: 'bars_pattern', label: 'bars_pattern' },
  { action: 'brush', label: 'brush' },
  { action: 'cross_line', label: 'cross_line' },
  { action: 'cursor', label: 'cursor' },
  { action: 'curve', label: 'curve' },
  { action: 'cyclic_lines', label: 'cyclic_lines' },
  { action: 'cypher_pattern', label: 'cypher_pattern' },
  { action: 'date_and_price_range', label: 'date_and_price_range' },
  { action: 'date_range', label: 'date_range' },
  { action: 'disjoint_angle', label: 'disjoint_angle' },
  { action: 'dot', label: 'dot' },
  { action: 'double_curve', label: 'double_curve' },
  { action: 'elliott_correction', label: 'elliott_correction' },
  { action: 'elliott_double_combo', label: 'elliott_double_combo' },
  { action: 'elliott_impulse_wave', label: 'elliott_impulse_wave' },
  { action: 'elliott_triangle_wave', label: 'elliott_triangle_wave' },
  { action: 'elliott_triple_combo', label: 'elliott_triple_combo' },
  { action: 'ellipse', label: 'ellipse' },
  { action: 'eraser', label: 'eraser' },
  { action: 'extended', label: 'extended' },
  { action: 'fib_channel', label: 'fib_channel' },
  { action: 'fib_circles', label: 'fib_circles' },
  { action: 'fib_retracement', label: 'fib_retracement' },
  { action: 'fib_speed_resist_arcs', label: 'fib_speed_resist_arcs' },
  { action: 'fib_speed_resist_fan', label: 'fib_speed_resist_fan' },
  { action: 'fib_spiral', label: 'fib_spiral' },
  { action: 'fib_timezone', label: 'fib_timezone' },
  { action: 'fib_trend_ext', label: 'fib_trend_ext' },
  { action: 'fib_trend_time', label: 'fib_trend_time' },
  { action: 'fib_wedge', label: 'fib_wedge' },
  { action: 'flag', label: 'flag' },
  { action: 'flat_bottom', label: 'flat_bottom' },
  { action: 'forecast', label: 'forecast' },
  { action: 'gannbox_fan', label: 'gannbox_fan' },
  { action: 'gannbox_square', label: 'gannbox_square' },
  { action: 'gannbox', label: 'gannbox' },
  { action: 'ghost_feed', label: 'ghost_feed' },
  { action: 'head_and_shoulders', label: 'head_and_shoulders' },
  { action: 'horizontal_line', label: 'horizontal_line' },
  { action: 'horizontal_ray', label: 'horizontal_ray' },
  { action: 'inside_pitchfork', label: 'inside_pitchfork' },
  { action: 'long_position', label: 'long_position' },
  { action: 'measure', label: 'measure' },
  { action: 'parallel_channel', label: 'parallel_channel' },
  { action: 'pitchfan', label: 'pitchfan' },
  { action: 'pitchfork', label: 'pitchfork' },
  { action: 'polyline', label: 'polyline' },
  { action: 'price_label', label: 'price_label' },
  { action: 'price_range', label: 'price_range' },
  { action: 'projection', label: 'projection' },
  { action: 'ray', label: 'ray' },
  { action: 'rectangle', label: 'rectangle' },
  { action: 'rotated_rectangle', label: 'rotated_rectangle' },
  { action: 'schiff_pitchfork_modified', label: 'schiff_pitchfork_modified' },
  { action: 'schiff_pitchfork', label: 'schiff_pitchfork' },
  { action: 'short_position', label: 'short_position' },
  { action: 'sine_line', label: 'sine_line' },
  { action: 'text', label: 'text' },
  { action: 'time_cycles', label: 'time_cycles' },
  { action: 'trend_angle', label: 'trend_angle' },
  { action: 'trend_infoline', label: 'trend_infoline' },
  { action: 'trend_line', label: 'trend_line' },
  { action: 'triangle_pattern', label: 'triangle_pattern' },
  { action: 'triangle', label: 'triangle' },
  { action: 'vertical_line', label: 'vertical_line' },
  { action: 'xabcd_pattern', label: 'xabcd_pattern' },
  { action: 'zoom', label: 'zoom' },
].sort((a, b) => {
  const lA = a.label.toUpperCase();
  const lB = b.label.toUpperCase();
  if (lA < lB) {
    return -1;
  }
  if (lA > lB) {
    return 1;
  }

  return 0;
});